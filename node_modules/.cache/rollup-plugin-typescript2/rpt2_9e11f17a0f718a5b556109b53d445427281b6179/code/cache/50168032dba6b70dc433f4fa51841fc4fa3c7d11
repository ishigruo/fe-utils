{"code":"/**\n * 参考：\n * https://github.com/any86/any-rule\n */\nexport function isUrl(path) {\n    var regex = /^(((ht|f)tps?):\\/\\/)?([^!@#$%^&*?.\\s-]([^!@#$%^&*?.\\s]{0,63}[^!@#$%^&*?.\\s])?\\.)+[a-z]{2,6}\\/?/;\n    return regex.test(path);\n}\n/**\n * 判断是否是微信环境\n */\nexport function isWxClient() {\n    var regex = /MicroMessenger/i;\n    var ua = navigator.userAgent.toLowerCase();\n    return regex.test(ua);\n}\n/**\n * 判断是否是移动端\n */\nexport function isMobile() {\n    var regex = /AppleWebKit.*Mobile.*/i;\n    var ua = navigator.userAgent.toLowerCase();\n    return regex.test(ua);\n}\n/**\n * 判断是否是 iOS 终端\n */\nexport function isiOS() {\n    var regex = /(iPhone|iPad|iPod|iOS)/i;\n    var ua = navigator.userAgent.toLowerCase();\n    return regex.test(ua);\n}\n/**\n * 判断是否为图片 URL\n * copy from https://github.com/vant-ui/vant/blob/7eaefd04fac0f2a188d9386ea677379ead61e903/packages/vant/src/uploader/utils.ts#L66-L68\n */\nexport var isImageUrl = function (url) {\n    var regex = /\\.(jpeg|jpg|gif|png|svg|webp|jfif|bmp|dpg)/i;\n    return regex.test(url);\n};\n/**\n * 判断是否为 整数\n */\nexport var isInteger = function (num) {\n    var regex = /^(?:0|(?:-?[1-9]\\d*))$/;\n    return regex.test(num);\n};\n/**\n * 判断是否为 正整数\n */\nexport var isPositiveInteger = function (num) {\n    var regex = /^\\+?[1-9]\\d*$/;\n    return regex.test(num);\n};\n/**\n * 判断当前是否是企微环境\n */\nexport var isWeWork = window.navigator.userAgent.match('wxwork');\n/**\n * 判断是否是手机号\n */\nexport var isPhoneNo = /^1(3[0-9]|4[01456879]|5[0-35-9]|6[2567]|7[0-8]|8[0-9]|9[0-35-9])\\d{8}$/;\n/**\n * 判断是否是 邮箱地址\n */\nexport var isMail = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n/**\n * 判断是否是 英文\n */\nexport var isOnlyEnglish = /^[a-zA-Z]+$/;\n/**\n * 判断是否是 中文\n */\nexport var isOnlyChinese = /^[\\u4e00-\\u9fa5]+$/;\n/**\n * 判断是否是手机号\n */\nexport var isPhoneNumber = /^1[3-9]\\d{9}$/;\n/**\n * 判断 是否是英文+空格+数字\n */\nexport var validFormat = /^[a-zA-Z0-9\\s]*$/;\n/**\n * 电话号码校验规则: 只支持数字, 位数最长限制为40（有海外的号码）\n * 更新规则: 新增「-」和「（）」的支持\n */\nexport var phoneNumberPattern = function (value) {\n    var regex = /^[\\d()-]{1,40}$/;\n    return regex.test(value);\n};\n/**\n * 验证居民身份证号码是否有效\n * @param idCardNo 证件号码\n * @returns boolean\n */\nexport var isValidResidentIdentityCard = function (idCardNo) {\n    var _a;\n    // 居民身份证：18位\n    // 最后一位必须是数字或者字母X\n    var idCardPattern = /^[1-9]\\d{5}(18|19|20)\\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/;\n    if (!idCardPattern.test(idCardNo)) {\n        return false;\n    }\n    var coefficients = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n    var checkCodes = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n    var idCardArray = idCardNo === null || idCardNo === void 0 ? void 0 : idCardNo.split('');\n    var sum = (_a = idCardArray === null || idCardArray === void 0 ? void 0 : idCardArray.slice(0, 17)) === null || _a === void 0 ? void 0 : _a.reduce(function (acc, num, index) {\n        return acc + parseInt(num, 10) * coefficients[index];\n    }, 0);\n    var calculatedCheckCode = checkCodes[sum % 11];\n    // 确保最后一位是大写的X\n    var actualCheckCode = idCardArray[17].toUpperCase();\n    return calculatedCheckCode === actualCheckCode;\n};\n","references":[]}
